// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum GenderType {
  MALE
  FEMALE
  OTHER
}

model User {
  id                Int                   @id @unique @default(autoincrement())
  userId            String                @unique @map("user_id")
  password          String
  name              String?
  userSeq           String                @unique @map("user_seq")
  preferredFoods    UserFoodMapping[]
  preferredCategory UserCategoryMapping[]
  createdAt         DateTime              @default(now()) @map("reg_dtime")
  updatedAt         DateTime              @updatedAt @map("upd_dtime")
  gender            GenderType
  age               Int

  @@map("MG_MB_USER")
}

model Food {
  id         Int               @id @unique @default(autoincrement())
  name       String            @unique
  category   Category          @relation(fields: [categoryId], references: [id])
  categoryId Int               @map("category_id")
  users      UserFoodMapping[]
  createdAt  DateTime          @default(now()) @map("reg_dtime")
  updatedAt  DateTime          @updatedAt @map("upd_dtime")

  @@map("MG_MB_FOOD")
}

model UserFoodMapping {
  id     Int @id @unique @default(autoincrement())
  userId Int @map("user_id")
  foodId Int @map("food_id")

  user User @relation(fields: [userId], references: [id])
  food Food @relation(fields: [foodId], references: [id])

  @@unique(fields: [userId, foodId], name: "userPreferredFood")
  @@map("MG_MB_USER_FOOD_MAPPING")
}

model Category {
  id        Int                   @id @default(autoincrement())
  type      String
  foods     Food[]
  users     UserCategoryMapping[]
  createdAt DateTime              @default(now()) @map("reg_dtime")
  updatedAt DateTime              @updatedAt @map("upd_dtime")

  @@map("MG_MB_CATEGORY")
}

model UserCategoryMapping {
  id         Int @id @unique @default(autoincrement())
  userId     Int @map("user_id")
  categoryId Int @map("category_id")

  user     User     @relation(fields: [userId], references: [id])
  Category Category @relation(fields: [categoryId], references: [id])

  @@unique(fields: [userId, categoryId], name: "userPreferredCategory")
  @@map("MG_MB_USER_CATEGORY_MAPPING")
}
